/*! tailwindcss v4.1.10 | MIT License | https://tailwindcss.com */ @layer properties {
	@supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
		((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
		*,
		:before,
		:after,
		::backdrop {
			--tw-translate-x: 0;
			--tw-translate-y: 0;
			--tw-translate-z: 0;
			--tw-scale-x: 1;
			--tw-scale-y: 1;
			--tw-scale-z: 1;
			--tw-rotate-x: initial;
			--tw-rotate-y: initial;
			--tw-rotate-z: initial;
			--tw-skew-x: initial;
			--tw-skew-y: initial;
			--tw-space-y-reverse: 0;
			--tw-border-style: solid;
			--tw-gradient-position: initial;
			--tw-gradient-from: #0000;
			--tw-gradient-via: #0000;
			--tw-gradient-to: #0000;
			--tw-gradient-stops: initial;
			--tw-gradient-via-stops: initial;
			--tw-gradient-from-position: 0%;
			--tw-gradient-via-position: 50%;
			--tw-gradient-to-position: 100%;
			--tw-leading: initial;
			--tw-font-weight: initial;
			--tw-tracking: initial;
			--tw-shadow: 0 0 #0000;
			--tw-shadow-color: initial;
			--tw-shadow-alpha: 100%;
			--tw-inset-shadow: 0 0 #0000;
			--tw-inset-shadow-color: initial;
			--tw-inset-shadow-alpha: 100%;
			--tw-ring-color: initial;
			--tw-ring-shadow: 0 0 #0000;
			--tw-inset-ring-color: initial;
			--tw-inset-ring-shadow: 0 0 #0000;
			--tw-ring-inset: initial;
			--tw-ring-offset-width: 0px;
			--tw-ring-offset-color: #fff;
			--tw-ring-offset-shadow: 0 0 #0000;
			--tw-outline-style: solid;
			--tw-backdrop-blur: initial;
			--tw-backdrop-brightness: initial;
			--tw-backdrop-contrast: initial;
			--tw-backdrop-grayscale: initial;
			--tw-backdrop-hue-rotate: initial;
			--tw-backdrop-invert: initial;
			--tw-backdrop-opacity: initial;
			--tw-backdrop-saturate: initial;
			--tw-backdrop-sepia: initial;
			--tw-duration: initial;
			--tw-ease: initial;
			--tw-space-x-reverse: 0;
			--tw-animation-delay: 0s;
			--tw-animation-direction: normal;
			--tw-animation-duration: initial;
			--tw-animation-fill-mode: none;
			--tw-animation-iteration-count: 1;
			--tw-enter-opacity: 1;
			--tw-enter-rotate: 0;
			--tw-enter-scale: 1;
			--tw-enter-translate-x: 0;
			--tw-enter-translate-y: 0;
			--tw-exit-opacity: 1;
			--tw-exit-rotate: 0;
			--tw-exit-scale: 1;
			--tw-exit-translate-x: 0;
			--tw-exit-translate-y: 0;
		}
	}
}
@layer theme {
	:root,
	:host {
		--font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
			"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
		--font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
			"Liberation Mono", "Courier New", monospace;
		--color-red-400: oklch(70.4% 0.191 22.216);
		--color-red-600: oklch(57.7% 0.245 27.325);
		--color-orange-100: oklch(95.4% 0.038 75.164);
		--color-orange-400: oklch(75% 0.183 55.934);
		--color-orange-600: oklch(64.6% 0.222 41.116);
		--color-orange-900: oklch(40.8% 0.123 38.172);
		--color-amber-50: oklch(98.7% 0.022 95.277);
		--color-amber-200: oklch(92.4% 0.12 95.746);
		--color-amber-300: oklch(87.9% 0.169 91.605);
		--color-amber-400: oklch(82.8% 0.189 84.429);
		--color-amber-600: oklch(66.6% 0.179 58.318);
		--color-amber-800: oklch(47.3% 0.137 46.201);
		--color-amber-950: oklch(27.9% 0.077 45.635);
		--color-green-50: oklch(98.2% 0.018 155.826);
		--color-green-100: oklch(96.2% 0.044 156.743);
		--color-green-200: oklch(92.5% 0.084 155.995);
		--color-green-300: oklch(87.1% 0.15 154.449);
		--color-green-400: oklch(79.2% 0.209 151.711);
		--color-green-500: oklch(72.3% 0.219 149.579);
		--color-green-600: oklch(62.7% 0.194 149.214);
		--color-green-800: oklch(44.8% 0.119 151.328);
		--color-green-900: oklch(39.3% 0.095 152.535);
		--color-cyan-500: oklch(71.5% 0.143 215.221);
		--color-blue-500: oklch(62.3% 0.214 259.815);
		--color-slate-950: oklch(12.9% 0.042 264.695);
		--color-gray-600: oklch(44.6% 0.03 256.802);
		--color-black: #000;
		--color-white: #fff;
		--spacing: .25rem;
		--container-sm: 24rem;
		--container-md: 28rem;
		--container-lg: 32rem;
		--container-xl: 36rem;
		--container-2xl: 42rem;
		--text-xs: .75rem;
		--text-xs--line-height: calc(1 / 0.75);
		--text-sm: .875rem;
		--text-sm--line-height: calc(1.25 / 0.875);
		--text-base: 1rem;
		--text-base--line-height: 1.5;
		--text-lg: 1.125rem;
		--text-lg--line-height: calc(1.75 / 1.125);
		--text-xl: 1.25rem;
		--text-xl--line-height: calc(1.75 / 1.25);
		--text-2xl: 1.5rem;
		--text-2xl--line-height: calc(2 / 1.5);
		--text-3xl: 1.875rem;
		--text-3xl--line-height: 1.2;
		--text-4xl: 2.25rem;
		--text-4xl--line-height: calc(2.5 / 2.25);
		--font-weight-light: 300;
		--font-weight-normal: 400;
		--font-weight-medium: 500;
		--font-weight-semibold: 600;
		--font-weight-bold: 700;
		--tracking-tight: -.025em;
		--tracking-widest: .1em;
		--leading-relaxed: 1.625;
		--ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
		--animate-spin: spin 1s linear infinite;
		--blur-sm: 8px;
		--default-transition-duration: .15s;
		--default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		--default-font-family: var(--font-sans);
		--default-mono-font-family: var(--font-mono);
	}
}
@layer base {
	*,
	:after,
	:before,
	::backdrop {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::file-selector-button {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	html,
	:host {
		-webkit-text-size-adjust: 100%;
		-moz-tab-size: 4;
		tab-size: 4;
		line-height: 1.5;
		font-family: var(
			--default-font-family,
			ui-sans-serif,
			system-ui,
			sans-serif,
			"Apple Color Emoji",
			"Segoe UI Emoji",
			"Segoe UI Symbol",
			"Noto Color Emoji"
		);
		font-feature-settings: var(--default-font-feature-settings, normal);
		font-variation-settings: var(--default-font-variation-settings, normal);
		-webkit-tap-highlight-color: transparent;
	}
	hr {
		height: 0;
		color: inherit;
		border-top-width: 1px;
	}
	abbr:where([title]) {
		-webkit-text-decoration: underline dotted;
		text-decoration: underline dotted;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-size: inherit;
		font-weight: inherit;
	}
	a {
		color: inherit;
		-webkit-text-decoration: inherit;
		text-decoration: inherit;
	}
	b,
	strong {
		font-weight: bolder;
	}
	code,
	kbd,
	samp,
	pre {
		font-family: var(
			--default-mono-font-family,
			ui-monospace,
			SFMono-Regular,
			Menlo,
			Monaco,
			Consolas,
			"Liberation Mono",
			"Courier New",
			monospace
		);
		font-feature-settings: var(--default-mono-font-feature-settings, normal);
		font-variation-settings: var(--default-mono-font-variation-settings, normal);
		font-size: 1em;
	}
	small {
		font-size: 80%;
	}
	sub,
	sup {
		vertical-align: baseline;
		font-size: 75%;
		line-height: 0;
		position: relative;
	}
	sub {
		bottom: -.25em;
	}
	sup {
		top: -.5em;
	}
	table {
		text-indent: 0;
		border-color: inherit;
		border-collapse: collapse;
	}
	:-moz-focusring {
		outline: auto;
	}
	progress {
		vertical-align: baseline;
	}
	summary {
		display: list-item;
	}
	ol,
	ul,
	menu {
		list-style: none;
	}
	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		vertical-align: middle;
		display: block;
	}
	img,
	video {
		max-width: 100%;
		height: auto;
	}
	button,
	input,
	select,
	optgroup,
	textarea {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: #0000;
		border-radius: 0;
	}
	::file-selector-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: #0000;
		border-radius: 0;
	}
	:where(select:is([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:is([multiple], [size])) optgroup option {
		padding-inline-start: 20px;
	}
	::file-selector-button {
		margin-inline-end: 4px;
	}
	::placeholder {
		opacity: 1;
	}
	@supports (not ((-webkit-appearance: -apple-pay-button))) or
		(contain-intrinsic-size: 1px) {
		::placeholder {
			color: currentColor;
		}
		@supports (color: color-mix(in lab, red, red)) {
			::placeholder {
				color: color-mix(in oklab, currentcolor 50%, transparent);
			}
		}
	}
	textarea {
		resize: vertical;
	}
	::-webkit-search-decoration {
		-webkit-appearance: none;
	}
	::-webkit-date-and-time-value {
		min-height: 1lh;
		text-align: inherit;
	}
	::-webkit-datetime-edit {
		display: inline-flex;
	}
	::-webkit-datetime-edit-fields-wrapper {
		padding: 0;
	}
	::-webkit-datetime-edit {
		padding-block: 0;
	}
	::-webkit-datetime-edit-year-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-month-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-day-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-hour-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-minute-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-second-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-millisecond-field {
		padding-block: 0;
	}
	::-webkit-datetime-edit-meridiem-field {
		padding-block: 0;
	}
	:-moz-ui-invalid {
		box-shadow: none;
	}
	button,
	input:where([type="button"], [type="reset"], [type="submit"]) {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::file-selector-button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::-webkit-inner-spin-button {
		height: auto;
	}
	::-webkit-outer-spin-button {
		height: auto;
	}
	[hidden]:where(:not([hidden="until-found"])) {
		display: none !important;
	}
	* {
		border-color: var(--border);
		outline-color: var(--ring);
	}
	@supports (color: color-mix(in lab, red, red)) {
		* {
			outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
		}
	}
	body {
		background-color: var(--background);
		color: var(--foreground);
	}
}
@layer components;
@layer utilities {
	.\@container\/card-header {
		container: card-header / inline-size;
	}
	.pointer-events-none {
		pointer-events: none;
	}
	.visible {
		visibility: visible;
	}
	.sr-only {
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border-width: 0;
		width: 1px;
		height: 1px;
		margin: -1px;
		padding: 0;
		position: absolute;
		overflow: hidden;
	}
	.absolute {
		position: absolute;
	}
	.fixed {
		position: fixed;
	}
	.relative {
		position: relative;
	}
	.sticky {
		position: sticky;
	}
	.inset-0 {
		inset: calc(var(--spacing) * 0);
	}
	.top-0 {
		top: calc(var(--spacing) * 0);
	}
	.top-4 {
		top: calc(var(--spacing) * 4);
	}
	.top-6 {
		top: calc(var(--spacing) * 6);
	}
	.top-\[50\%\] {
		top: 50%;
	}
	.right-0 {
		right: calc(var(--spacing) * 0);
	}
	.right-4 {
		right: calc(var(--spacing) * 4);
	}
	.left-0 {
		left: calc(var(--spacing) * 0);
	}
	.left-2 {
		left: calc(var(--spacing) * 2);
	}
	.left-\[50\%\] {
		left: 50%;
	}
	.z-50 {
		z-index: 50;
	}
	.col-start-2 {
		grid-column-start: 2;
	}
	.row-span-2 {
		grid-row: span 2 / span 2;
	}
	.row-start-1 {
		grid-row-start: 1;
	}
	.container {
		width: 100%;
	}
	@media (min-width: 40rem) {
		.container {
			max-width: 40rem;
		}
	}
	@media (min-width: 48rem) {
		.container {
			max-width: 48rem;
		}
	}
	@media (min-width: 64rem) {
		.container {
			max-width: 64rem;
		}
	}
	@media (min-width: 80rem) {
		.container {
			max-width: 80rem;
		}
	}
	@media (min-width: 96rem) {
		.container {
			max-width: 96rem;
		}
	}
	.m-auto {
		margin: auto;
	}
	.-mx-1 {
		margin-inline: calc(var(--spacing) * -1);
	}
	.mx-auto {
		margin-inline: auto;
	}
	.my-1 {
		margin-block: calc(var(--spacing) * 1);
	}
	.prose {
		color: var(--tw-prose-body);
		max-width: 65ch;
	}
	.prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
	}
	.prose
		:where([class~="lead"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: var(--tw-prose-lead);
		margin-top: 1.2em;
		margin-bottom: 1.2em;
		font-size: 1.25em;
		line-height: 1.6;
	}
	.prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-links);
		font-weight: 500;
		text-decoration: underline;
	}
	.prose
		:where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-bold);
		font-weight: 600;
	}
	.prose
		:where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(blockquote strong):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		),
	.prose
		:where(thead th strong):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: inherit;
	}
	.prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
		padding-inline-start: 1.625em;
		list-style-type: decimal;
	}
	.prose
		:where(ol[type="A"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: upper-alpha;
	}
	.prose
		:where(ol[type="a"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: lower-alpha;
	}
	.prose
		:where(ol[type="A" s]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: upper-alpha;
	}
	.prose
		:where(ol[type="a" s]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: lower-alpha;
	}
	.prose
		:where(ol[type="I"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: upper-roman;
	}
	.prose
		:where(ol[type="i"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: lower-roman;
	}
	.prose
		:where(ol[type="I" s]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: upper-roman;
	}
	.prose
		:where(ol[type="i" s]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: lower-roman;
	}
	.prose
		:where(ol[type="1"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		list-style-type: decimal;
	}
	.prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
		padding-inline-start: 1.625em;
		list-style-type: disc;
	}
	.prose
		:where(ol > li):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		)::marker {
		color: var(--tw-prose-counters);
		font-weight: 400;
	}
	.prose
		:where(ul > li):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		)::marker {
		color: var(--tw-prose-bullets);
	}
	.prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		margin-top: 1.25em;
		font-weight: 600;
	}
	.prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		border-color: var(--tw-prose-hr);
		border-top-width: 1px;
		margin-top: 3em;
		margin-bottom: 3em;
	}
	.prose
		:where(blockquote):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: var(--tw-prose-quotes);
		border-inline-start-width: .25rem;
		border-inline-start-color: var(--tw-prose-quote-borders);
		quotes: "“" "”" "‘" "’";
		margin-top: 1.6em;
		margin-bottom: 1.6em;
		padding-inline-start: 1em;
		font-style: italic;
		font-weight: 500;
	}
	.prose
		:where(blockquote p:first-of-type):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		):before {
		content: open-quote;
	}
	.prose
		:where(blockquote p:last-of-type):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		):after {
		content: close-quote;
	}
	.prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		margin-top: 0;
		margin-bottom: .888889em;
		font-size: 2.25em;
		font-weight: 800;
		line-height: 1.11111;
	}
	.prose
		:where(h1 strong):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: inherit;
		font-weight: 900;
	}
	.prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		margin-top: 2em;
		margin-bottom: 1em;
		font-size: 1.5em;
		font-weight: 700;
		line-height: 1.33333;
	}
	.prose
		:where(h2 strong):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: inherit;
		font-weight: 800;
	}
	.prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		margin-top: 1.6em;
		margin-bottom: .6em;
		font-size: 1.25em;
		font-weight: 600;
		line-height: 1.6;
	}
	.prose
		:where(h3 strong):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: inherit;
		font-weight: 700;
	}
	.prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		margin-top: 1.5em;
		margin-bottom: .5em;
		font-weight: 600;
		line-height: 1.5;
	}
	.prose
		:where(h4 strong):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: inherit;
		font-weight: 700;
	}
	.prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}
	.prose
		:where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
		display: block;
	}
	.prose
		:where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}
	.prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-kbd);
		box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px
			rgb(var(--tw-prose-kbd-shadows) / 10%);
		padding-top: .1875em;
		padding-inline-end: .375em;
		padding-bottom: .1875em;
		border-radius: .3125rem;
		padding-inline-start: .375em;
		font-family: inherit;
		font-size: .875em;
		font-weight: 500;
	}
	.prose
		:where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-code);
		font-size: .875em;
		font-weight: 600;
	}
	.prose
		:where(code):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		):before,
	.prose
		:where(code):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		):after {
		content: "`";
	}
	.prose
		:where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: inherit;
	}
	.prose
		:where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: inherit;
		font-size: .875em;
	}
	.prose
		:where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: inherit;
		font-size: .9em;
	}
	.prose
		:where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(blockquote code):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		),
	.prose
		:where(thead th code):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: inherit;
	}
	.prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-pre-code);
		background-color: var(--tw-prose-pre-bg);
		padding-top: .857143em;
		padding-inline-end: 1.14286em;
		padding-bottom: .857143em;
		border-radius: .375rem;
		margin-top: 1.71429em;
		margin-bottom: 1.71429em;
		padding-inline-start: 1.14286em;
		font-size: .875em;
		font-weight: 400;
		line-height: 1.71429;
		overflow-x: auto;
	}
	.prose
		:where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		font-weight: inherit;
		color: inherit;
		font-size: inherit;
		font-family: inherit;
		line-height: inherit;
		background-color: #0000;
		border-width: 0;
		border-radius: 0;
		padding: 0;
	}
	.prose
		:where(pre code):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		):before,
	.prose
		:where(pre code):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		):after {
		content: none;
	}
	.prose
		:where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		table-layout: auto;
		width: 100%;
		margin-top: 2em;
		margin-bottom: 2em;
		font-size: .875em;
		line-height: 1.71429;
	}
	.prose
		:where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-th-borders);
	}
	.prose
		:where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		color: var(--tw-prose-headings);
		vertical-align: bottom;
		padding-inline-end: .571429em;
		padding-bottom: .571429em;
		padding-inline-start: .571429em;
		font-weight: 600;
	}
	.prose
		:where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-td-borders);
	}
	.prose
		:where(tbody tr:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		border-bottom-width: 0;
	}
	.prose
		:where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		vertical-align: baseline;
	}
	.prose
		:where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		border-top-width: 1px;
		border-top-color: var(--tw-prose-th-borders);
	}
	.prose
		:where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		vertical-align: top;
	}
	.prose
		:where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		text-align: start;
	}
	.prose
		:where(figure > *):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.prose
		:where(figcaption):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		color: var(--tw-prose-captions);
		margin-top: .857143em;
		font-size: .875em;
		line-height: 1.42857;
	}
	.prose {
		--tw-prose-body: oklch(37.3% 0.034 259.733);
		--tw-prose-headings: oklch(21% 0.034 264.665);
		--tw-prose-lead: oklch(44.6% 0.03 256.802);
		--tw-prose-links: oklch(21% 0.034 264.665);
		--tw-prose-bold: oklch(21% 0.034 264.665);
		--tw-prose-counters: oklch(55.1% 0.027 264.364);
		--tw-prose-bullets: oklch(87.2% 0.01 258.338);
		--tw-prose-hr: oklch(92.8% 0.006 264.531);
		--tw-prose-quotes: oklch(21% 0.034 264.665);
		--tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
		--tw-prose-captions: oklch(55.1% 0.027 264.364);
		--tw-prose-kbd: oklch(21% 0.034 264.665);
		--tw-prose-kbd-shadows: NaN NaN NaN;
		--tw-prose-code: oklch(21% 0.034 264.665);
		--tw-prose-pre-code: oklch(92.8% 0.006 264.531);
		--tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
		--tw-prose-th-borders: oklch(87.2% 0.01 258.338);
		--tw-prose-td-borders: oklch(92.8% 0.006 264.531);
		--tw-prose-invert-body: oklch(87.2% 0.01 258.338);
		--tw-prose-invert-headings: #fff;
		--tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
		--tw-prose-invert-links: #fff;
		--tw-prose-invert-bold: #fff;
		--tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
		--tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
		--tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
		--tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
		--tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
		--tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
		--tw-prose-invert-kbd: #fff;
		--tw-prose-invert-kbd-shadows: 255 255 255;
		--tw-prose-invert-code: #fff;
		--tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
		--tw-prose-invert-pre-bg: #00000080;
		--tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
		--tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
		font-size: 1rem;
		line-height: 1.75;
	}
	.prose
		:where(picture > img):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: .5em;
		margin-bottom: .5em;
	}
	.prose
		:where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		padding-inline-start: .375em;
	}
	.prose
		:where(.prose > ul > li p):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: .75em;
		margin-bottom: .75em;
	}
	.prose
		:where(.prose > ul > li > p:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 1.25em;
	}
	.prose
		:where(.prose > ul > li > p:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-bottom: 1.25em;
	}
	.prose
		:where(.prose > ol > li > p:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 1.25em;
	}
	.prose
		:where(.prose > ol > li > p:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-bottom: 1.25em;
	}
	.prose
		:where(ul ul, ul ol, ol ul, ol ol):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: .75em;
		margin-bottom: .75em;
	}
	.prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
	}
	.prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: .5em;
		padding-inline-start: 1.625em;
	}
	.prose
		:where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose
		:where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 0;
	}
	.prose
		:where(thead th:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-start: 0;
	}
	.prose
		:where(thead th:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-end: 0;
	}
	.prose
		:where(tbody td, tfoot td):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-top: .571429em;
		padding-inline-end: .571429em;
		padding-bottom: .571429em;
		padding-inline-start: .571429em;
	}
	.prose
		:where(tbody td:first-child, tfoot td:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-start: 0;
	}
	.prose
		:where(tbody td:last-child, tfoot td:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-end: 0;
	}
	.prose
		:where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}
	.prose
		:where(.prose > :first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 0;
	}
	.prose
		:where(.prose > :last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-bottom: 0;
	}
	.prose-sm {
		font-size: .875rem;
		line-height: 1.71429;
	}
	.prose-sm
		:where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.14286em;
		margin-bottom: 1.14286em;
	}
	.prose-sm
		:where([class~="lead"]):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: .888889em;
		margin-bottom: .888889em;
		font-size: 1.28571em;
		line-height: 1.55556;
	}
	.prose-sm
		:where(blockquote):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 1.33333em;
		margin-bottom: 1.33333em;
		padding-inline-start: 1.11111em;
	}
	.prose-sm
		:where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: .8em;
		font-size: 2.14286em;
		line-height: 1.2;
	}
	.prose-sm
		:where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.6em;
		margin-bottom: .8em;
		font-size: 1.42857em;
		line-height: 1.4;
	}
	.prose-sm
		:where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.55556em;
		margin-bottom: .444444em;
		font-size: 1.28571em;
		line-height: 1.55556;
	}
	.prose-sm
		:where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.42857em;
		margin-bottom: .571429em;
		line-height: 1.42857;
	}
	.prose-sm
		:where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose-sm
		:where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.71429em;
		margin-bottom: 1.71429em;
	}
	.prose-sm
		:where(picture > img):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.prose-sm
		:where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.71429em;
		margin-bottom: 1.71429em;
	}
	.prose-sm
		:where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		padding-top: .142857em;
		padding-inline-end: .357143em;
		padding-bottom: .142857em;
		border-radius: .3125rem;
		padding-inline-start: .357143em;
		font-size: .857143em;
	}
	.prose-sm
		:where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		font-size: .857143em;
	}
	.prose-sm
		:where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		font-size: .9em;
	}
	.prose-sm
		:where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		font-size: .888889em;
	}
	.prose-sm
		:where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		padding-top: .666667em;
		padding-inline-end: 1em;
		padding-bottom: .666667em;
		border-radius: .25rem;
		margin-top: 1.66667em;
		margin-bottom: 1.66667em;
		padding-inline-start: 1em;
		font-size: .857143em;
		line-height: 1.66667;
	}
	.prose-sm
		:where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose-sm
		:where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.14286em;
		margin-bottom: 1.14286em;
		padding-inline-start: 1.57143em;
	}
	.prose-sm
		:where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: .285714em;
		margin-bottom: .285714em;
	}
	.prose-sm
		:where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose-sm
		:where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		padding-inline-start: .428571em;
	}
	.prose-sm
		:where(.prose-sm > ul > li p):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: .571429em;
		margin-bottom: .571429em;
	}
	.prose-sm
		:where(.prose-sm > ul > li > p:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 1.14286em;
	}
	.prose-sm
		:where(.prose-sm > ul > li > p:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-bottom: 1.14286em;
	}
	.prose-sm
		:where(.prose-sm > ol > li > p:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 1.14286em;
	}
	.prose-sm
		:where(.prose-sm > ol > li > p:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-bottom: 1.14286em;
	}
	.prose-sm
		:where(ul ul, ul ol, ol ul, ol ol):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: .571429em;
		margin-bottom: .571429em;
	}
	.prose-sm
		:where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.14286em;
		margin-bottom: 1.14286em;
	}
	.prose-sm
		:where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.14286em;
	}
	.prose-sm
		:where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: .285714em;
		padding-inline-start: 1.57143em;
	}
	.prose-sm
		:where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 2.85714em;
		margin-bottom: 2.85714em;
	}
	.prose-sm
		:where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose-sm
		:where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose-sm
		:where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
	.prose-sm
		:where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 0;
	}
	.prose-sm
		:where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		font-size: .857143em;
		line-height: 1.5;
	}
	.prose-sm
		:where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		padding-inline-end: 1em;
		padding-bottom: .666667em;
		padding-inline-start: 1em;
	}
	.prose-sm
		:where(thead th:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-start: 0;
	}
	.prose-sm
		:where(thead th:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-end: 0;
	}
	.prose-sm
		:where(tbody td, tfoot td):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-top: .666667em;
		padding-inline-end: 1em;
		padding-bottom: .666667em;
		padding-inline-start: 1em;
	}
	.prose-sm
		:where(tbody td:first-child, tfoot td:first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-start: 0;
	}
	.prose-sm
		:where(tbody td:last-child, tfoot td:last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		padding-inline-end: 0;
	}
	.prose-sm
		:where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
		margin-top: 1.71429em;
		margin-bottom: 1.71429em;
	}
	.prose-sm
		:where(figure > *):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 0;
		margin-bottom: 0;
	}
	.prose-sm
		:where(figcaption):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: .666667em;
		font-size: .857143em;
		line-height: 1.33333;
	}
	.prose-sm
		:where(.prose-sm > :first-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-top: 0;
	}
	.prose-sm
		:where(.prose-sm > :last-child):not(
			:where([class~="not-prose"], [class~="not-prose"] *)
		) {
		margin-bottom: 0;
	}
	.mt-1 {
		margin-top: calc(var(--spacing) * 1);
	}
	.mt-2 {
		margin-top: calc(var(--spacing) * 2);
	}
	.mt-4 {
		margin-top: calc(var(--spacing) * 4);
	}
	.mt-8 {
		margin-top: calc(var(--spacing) * 8);
	}
	.mt-auto {
		margin-top: auto;
	}
	.mr-1 {
		margin-right: calc(var(--spacing) * 1);
	}
	.mr-2 {
		margin-right: calc(var(--spacing) * 2);
	}
	.mb-1 {
		margin-bottom: calc(var(--spacing) * 1);
	}
	.mb-2 {
		margin-bottom: calc(var(--spacing) * 2);
	}
	.mb-4 {
		margin-bottom: calc(var(--spacing) * 4);
	}
	.mb-6 {
		margin-bottom: calc(var(--spacing) * 6);
	}
	.mb-10 {
		margin-bottom: calc(var(--spacing) * 10);
	}
	.ml-auto {
		margin-left: auto;
	}
	.line-clamp-1 {
		-webkit-line-clamp: 1;
		-webkit-box-orient: vertical;
		display: -webkit-box;
		overflow: hidden;
	}
	.block {
		display: block;
	}
	.flex {
		display: flex;
	}
	.grid {
		display: grid;
	}
	.hidden {
		display: none;
	}
	.inline-flex {
		display: inline-flex;
	}
	.table {
		display: table;
	}
	.table-caption {
		display: table-caption;
	}
	.table-cell {
		display: table-cell;
	}
	.table-row {
		display: table-row;
	}
	.field-sizing-content {
		field-sizing: content;
	}
	.aspect-square {
		aspect-ratio: 1;
	}
	.size-2 {
		width: calc(var(--spacing) * 2);
		height: calc(var(--spacing) * 2);
	}
	.size-2\.5 {
		width: calc(var(--spacing) * 2.5);
		height: calc(var(--spacing) * 2.5);
	}
	.size-3\.5 {
		width: calc(var(--spacing) * 3.5);
		height: calc(var(--spacing) * 3.5);
	}
	.size-4 {
		width: calc(var(--spacing) * 4);
		height: calc(var(--spacing) * 4);
	}
	.size-9 {
		width: calc(var(--spacing) * 9);
		height: calc(var(--spacing) * 9);
	}
	.h-1 {
		height: calc(var(--spacing) * 1);
	}
	.h-2 {
		height: calc(var(--spacing) * 2);
	}
	.h-3 {
		height: calc(var(--spacing) * 3);
	}
	.h-3\.5 {
		height: calc(var(--spacing) * 3.5);
	}
	.h-4 {
		height: calc(var(--spacing) * 4);
	}
	.h-5 {
		height: calc(var(--spacing) * 5);
	}
	.h-6 {
		height: calc(var(--spacing) * 6);
	}
	.h-8 {
		height: calc(var(--spacing) * 8);
	}
	.h-9 {
		height: calc(var(--spacing) * 9);
	}
	.h-10 {
		height: calc(var(--spacing) * 10);
	}
	.h-12 {
		height: calc(var(--spacing) * 12);
	}
	.h-16 {
		height: calc(var(--spacing) * 16);
	}
	.h-\[1\.2rem\] {
		height: 1.2rem;
	}
	.h-\[400px\] {
		height: 400px;
	}
	.h-\[500px\] {
		height: 500px;
	}
	.h-\[var\(--radix-select-trigger-height\)\] {
		height: var(--radix-select-trigger-height);
	}
	.h-auto {
		height: auto;
	}
	.h-full {
		height: 100%;
	}
	.h-px {
		height: 1px;
	}
	.max-h-\(--radix-dropdown-menu-content-available-height\) {
		max-height: var(--radix-dropdown-menu-content-available-height);
	}
	.max-h-48 {
		max-height: calc(var(--spacing) * 48);
	}
	.max-h-96 {
		max-height: calc(var(--spacing) * 96);
	}
	.max-h-\[80vh\] {
		max-height: 80vh;
	}
	.min-h-4 {
		min-height: calc(var(--spacing) * 4);
	}
	.min-h-16 {
		min-height: calc(var(--spacing) * 16);
	}
	.min-h-\[100px\] {
		min-height: 100px;
	}
	.min-h-\[200px\] {
		min-height: 200px;
	}
	.min-h-screen {
		min-height: 100vh;
	}
	.w-2 {
		width: calc(var(--spacing) * 2);
	}
	.w-3 {
		width: calc(var(--spacing) * 3);
	}
	.w-3\.5 {
		width: calc(var(--spacing) * 3.5);
	}
	.w-4 {
		width: calc(var(--spacing) * 4);
	}
	.w-5 {
		width: calc(var(--spacing) * 5);
	}
	.w-6 {
		width: calc(var(--spacing) * 6);
	}
	.w-8 {
		width: calc(var(--spacing) * 8);
	}
	.w-10 {
		width: calc(var(--spacing) * 10);
	}
	.w-12 {
		width: calc(var(--spacing) * 12);
	}
	.w-16 {
		width: calc(var(--spacing) * 16);
	}
	.w-32 {
		width: calc(var(--spacing) * 32);
	}
	.w-40 {
		width: calc(var(--spacing) * 40);
	}
	.w-56 {
		width: calc(var(--spacing) * 56);
	}
	.w-64 {
		width: calc(var(--spacing) * 64);
	}
	.w-\[1\.2rem\] {
		width: 1.2rem;
	}
	.w-\[70px\] {
		width: 70px;
	}
	.w-\[100px\] {
		width: 100px;
	}
	.w-\[340px\] {
		width: 340px;
	}
	.w-\[600px\] {
		width: 600px;
	}
	.w-fit {
		width: fit-content;
	}
	.w-full {
		width: 100%;
	}
	.max-w-2xl {
		max-width: var(--container-2xl);
	}
	.max-w-20 {
		max-width: calc(var(--spacing) * 20);
	}
	.max-w-32 {
		max-width: calc(var(--spacing) * 32);
	}
	.max-w-full {
		max-width: 100%;
	}
	.max-w-lg {
		max-width: var(--container-lg);
	}
	.max-w-md {
		max-width: var(--container-md);
	}
	.max-w-none {
		max-width: none;
	}
	.max-w-xl {
		max-width: var(--container-xl);
	}
	.min-w-0 {
		min-width: calc(var(--spacing) * 0);
	}
	.min-w-\[8rem\] {
		min-width: 8rem;
	}
	.min-w-\[var\(--radix-select-trigger-width\)\] {
		min-width: var(--radix-select-trigger-width);
	}
	.flex-1 {
		flex: 1;
	}
	.shrink-0 {
		flex-shrink: 0;
	}
	.caption-bottom {
		caption-side: bottom;
	}
	.origin-\(--radix-dropdown-menu-content-transform-origin\) {
		transform-origin: var(--radix-dropdown-menu-content-transform-origin);
	}
	.origin-\(--radix-tooltip-content-transform-origin\) {
		transform-origin: var(--radix-tooltip-content-transform-origin);
	}
	.translate-x-\[-50\%\] {
		--tw-translate-x: -50%;
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.translate-y-\[-50\%\] {
		--tw-translate-y: -50%;
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.translate-y-\[calc\(-50\%_-_2px\)\] {
		--tw-translate-y: calc(-50% - 2px);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.scale-0 {
		--tw-scale-x: 0%;
		--tw-scale-y: 0%;
		--tw-scale-z: 0%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.scale-100 {
		--tw-scale-x: 100%;
		--tw-scale-y: 100%;
		--tw-scale-z: 100%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.rotate-0 {
		rotate: none;
	}
	.rotate-45 {
		rotate: 45deg;
	}
	.rotate-90 {
		rotate: 90deg;
	}
	.transform {
		transform:var(--tw-rotate-x,)var(--tw-rotate-y,)var(--tw-rotate-z,)var(--tw-skew-x,)var(--tw-skew-y,)
	}
	.animate-in {
		animation: enter var(--tw-animation-duration, var(--tw-duration, .15s))
			var(--tw-ease, ease) var(--tw-animation-delay, 0s)
			var(--tw-animation-iteration-count, 1)
			var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
	}
	.animate-spin {
		animation: var(--animate-spin);
	}
	.cursor-default {
		cursor: default;
	}
	.cursor-pointer {
		cursor: pointer;
	}
	.list-disc {
		list-style-type: disc;
	}
	.auto-rows-min {
		grid-auto-rows: min-content;
	}
	.grid-cols-1 {
		grid-template-columns: repeat(1, minmax(0, 1fr));
	}
	.grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
	.grid-cols-\[0_1fr\] {
		grid-template-columns: 0 1fr;
	}
	.grid-rows-\[auto_auto\] {
		grid-template-rows: auto auto;
	}
	.flex-col {
		flex-direction: column;
	}
	.flex-col-reverse {
		flex-direction: column-reverse;
	}
	.flex-row {
		flex-direction: row;
	}
	.flex-wrap {
		flex-wrap: wrap;
	}
	.items-center {
		align-items: center;
	}
	.items-start {
		align-items: flex-start;
	}
	.justify-between {
		justify-content: space-between;
	}
	.justify-center {
		justify-content: center;
	}
	.justify-end {
		justify-content: flex-end;
	}
	.justify-items-start {
		justify-items: start;
	}
	.gap-1 {
		gap: calc(var(--spacing) * 1);
	}
	.gap-1\.5 {
		gap: calc(var(--spacing) * 1.5);
	}
	.gap-2 {
		gap: calc(var(--spacing) * 2);
	}
	.gap-4 {
		gap: calc(var(--spacing) * 4);
	}
	.gap-6 {
		gap: calc(var(--spacing) * 6);
	}
	:where(.space-y-1 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 1) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 1) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-1\.5 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 1.5) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 1.5) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-2 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 2) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 2) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-3 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 3) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 3) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-4 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 4) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 4) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-6 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 6) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 6) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	:where(.space-y-8 > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 8) *
			var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 8) *
			calc(1 - var(--tw-space-y-reverse))
		);
	}
	.gap-y-0\.5 {
		row-gap: calc(var(--spacing) * 0.5);
	}
	.self-start {
		align-self: flex-start;
	}
	.justify-self-end {
		justify-self: flex-end;
	}
	.truncate {
		text-overflow: ellipsis;
		white-space: nowrap;
		overflow: hidden;
	}
	.overflow-hidden {
		overflow: hidden;
	}
	.overflow-x-auto {
		overflow-x: auto;
	}
	.overflow-x-hidden {
		overflow-x: hidden;
	}
	.overflow-y-auto {
		overflow-y: auto;
	}
	.rounded {
		border-radius: .25rem;
	}
	.rounded-\[2px\] {
		border-radius: 2px;
	}
	.rounded-full {
		border-radius: 3.40282e38px;
	}
	.rounded-lg {
		border-radius: var(--radius);
	}
	.rounded-md {
		border-radius: calc(var(--radius) - 2px);
	}
	.rounded-none {
		border-radius: 0;
	}
	.rounded-sm {
		border-radius: calc(var(--radius) - 4px);
	}
	.rounded-xl {
		border-radius: calc(var(--radius) + 4px);
	}
	.border {
		border-style: var(--tw-border-style);
		border-width: 1px;
	}
	.border-2 {
		border-style: var(--tw-border-style);
		border-width: 2px;
	}
	.border-x-0 {
		border-inline-style: var(--tw-border-style);
		border-inline-width: 0;
	}
	.border-t {
		border-top-style: var(--tw-border-style);
		border-top-width: 1px;
	}
	.border-t-0 {
		border-top-style: var(--tw-border-style);
		border-top-width: 0;
	}
	.border-b {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 1px;
	}
	.border-b-2 {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 2px;
	}
	.border-amber-200 {
		border-color: var(--color-amber-200);
	}
	.border-destructive {
		border-color: var(--destructive);
	}
	.border-green-100 {
		border-color: var(--color-green-100);
	}
	.border-green-200 {
		border-color: var(--color-green-200);
	}
	.border-green-500 {
		border-color: var(--color-green-500);
	}
	.border-input {
		border-color: var(--input);
	}
	.border-primary {
		border-color: var(--primary);
	}
	.border-transparent {
		border-color: #0000;
	}
	.bg-accent {
		background-color: var(--accent);
	}
	.bg-amber-50 {
		background-color: var(--color-amber-50);
	}
	.bg-background,
	.bg-background\/80 {
		background-color: var(--background);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-background\/80 {
			background-color: color-mix(in oklab, var(--background) 80%, transparent);
		}
	}
	.bg-black\/50 {
		background-color: #00000080;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-black\/50 {
			background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
		}
	}
	.bg-border {
		background-color: var(--border);
	}
	.bg-card {
		background-color: var(--card);
	}
	.bg-destructive {
		background-color: var(--destructive);
	}
	.bg-green-50 {
		background-color: var(--color-green-50);
	}
	.bg-green-100 {
		background-color: var(--color-green-100);
	}
	.bg-green-500 {
		background-color: var(--color-green-500);
	}
	.bg-muted,
	.bg-muted\/50 {
		background-color: var(--muted);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-muted\/50 {
			background-color: color-mix(in oklab, var(--muted) 50%, transparent);
		}
	}
	.bg-orange-100 {
		background-color: var(--color-orange-100);
	}
	.bg-popover {
		background-color: var(--popover);
	}
	.bg-primary,
	.bg-primary\/20 {
		background-color: var(--primary);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.bg-primary\/20 {
			background-color: color-mix(in oklab, var(--primary) 20%, transparent);
		}
	}
	.bg-secondary {
		background-color: var(--secondary);
	}
	.bg-slate-950 {
		background-color: var(--color-slate-950);
	}
	.bg-transparent {
		background-color: #0000;
	}
	.bg-white {
		background-color: var(--color-white);
	}
	.bg-gradient-to-r {
		--tw-gradient-position: to right in oklab;
		background-image: linear-gradient(var(--tw-gradient-stops));
	}
	.from-cyan-500 {
		--tw-gradient-from: var(--color-cyan-500);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.to-blue-500 {
		--tw-gradient-to: var(--color-blue-500);
		--tw-gradient-stops: var(
			--tw-gradient-via-stops,
			var(--tw-gradient-position),
			var(--tw-gradient-from) var(--tw-gradient-from-position),
			var(--tw-gradient-to) var(--tw-gradient-to-position)
		);
	}
	.fill-current {
		fill: currentColor;
	}
	.fill-primary {
		fill: var(--primary);
	}
	.p-0 {
		padding: calc(var(--spacing) * 0);
	}
	.p-1 {
		padding: calc(var(--spacing) * 1);
	}
	.p-2 {
		padding: calc(var(--spacing) * 2);
	}
	.p-3 {
		padding: calc(var(--spacing) * 3);
	}
	.p-4 {
		padding: calc(var(--spacing) * 4);
	}
	.p-6 {
		padding: calc(var(--spacing) * 6);
	}
	.p-8 {
		padding: calc(var(--spacing) * 8);
	}
	.p-12 {
		padding: calc(var(--spacing) * 12);
	}
	.px-1 {
		padding-inline: calc(var(--spacing) * 1);
	}
	.px-2 {
		padding-inline: calc(var(--spacing) * 2);
	}
	.px-2\.5 {
		padding-inline: calc(var(--spacing) * 2.5);
	}
	.px-3 {
		padding-inline: calc(var(--spacing) * 3);
	}
	.px-4 {
		padding-inline: calc(var(--spacing) * 4);
	}
	.px-6 {
		padding-inline: calc(var(--spacing) * 6);
	}
	.py-0 {
		padding-block: calc(var(--spacing) * 0);
	}
	.py-0\.5 {
		padding-block: calc(var(--spacing) * 0.5);
	}
	.py-1 {
		padding-block: calc(var(--spacing) * 1);
	}
	.py-1\.5 {
		padding-block: calc(var(--spacing) * 1.5);
	}
	.py-2 {
		padding-block: calc(var(--spacing) * 2);
	}
	.py-3 {
		padding-block: calc(var(--spacing) * 3);
	}
	.py-6 {
		padding-block: calc(var(--spacing) * 6);
	}
	.py-10 {
		padding-block: calc(var(--spacing) * 10);
	}
	.pt-4 {
		padding-top: calc(var(--spacing) * 4);
	}
	.pr-2 {
		padding-right: calc(var(--spacing) * 2);
	}
	.pb-2 {
		padding-bottom: calc(var(--spacing) * 2);
	}
	.pl-4 {
		padding-left: calc(var(--spacing) * 4);
	}
	.pl-8 {
		padding-left: calc(var(--spacing) * 8);
	}
	.text-center {
		text-align: center;
	}
	.text-left {
		text-align: left;
	}
	.align-middle {
		vertical-align: middle;
	}
	.font-mono {
		font-family: var(--font-mono);
	}
	.text-2xl {
		font-size: var(--text-2xl);
		line-height: var(--tw-leading, var(--text-2xl--line-height));
	}
	.text-3xl {
		font-size: var(--text-3xl);
		line-height: var(--tw-leading, var(--text-3xl--line-height));
	}
	.text-4xl {
		font-size: var(--text-4xl);
		line-height: var(--tw-leading, var(--text-4xl--line-height));
	}
	.text-base {
		font-size: var(--text-base);
		line-height: var(--tw-leading, var(--text-base--line-height));
	}
	.text-lg {
		font-size: var(--text-lg);
		line-height: var(--tw-leading, var(--text-lg--line-height));
	}
	.text-sm {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.text-xl {
		font-size: var(--text-xl);
		line-height: var(--tw-leading, var(--text-xl--line-height));
	}
	.text-xs {
		font-size: var(--text-xs);
		line-height: var(--tw-leading, var(--text-xs--line-height));
	}
	.leading-none {
		--tw-leading: 1;
		line-height: 1;
	}
	.font-bold {
		--tw-font-weight: var(--font-weight-bold);
		font-weight: var(--font-weight-bold);
	}
	.font-light {
		--tw-font-weight: var(--font-weight-light);
		font-weight: var(--font-weight-light);
	}
	.font-medium {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.font-normal {
		--tw-font-weight: var(--font-weight-normal);
		font-weight: var(--font-weight-normal);
	}
	.font-semibold {
		--tw-font-weight: var(--font-weight-semibold);
		font-weight: var(--font-weight-semibold);
	}
	.tracking-tight {
		--tw-tracking: var(--tracking-tight);
		letter-spacing: var(--tracking-tight);
	}
	.tracking-widest {
		--tw-tracking: var(--tracking-widest);
		letter-spacing: var(--tracking-widest);
	}
	.text-balance {
		text-wrap: balance;
	}
	.break-words {
		overflow-wrap: break-word;
	}
	.break-all {
		word-break: break-all;
	}
	.whitespace-nowrap {
		white-space: nowrap;
	}
	.text-amber-600 {
		color: var(--color-amber-600);
	}
	.text-amber-800 {
		color: var(--color-amber-800);
	}
	.text-card-foreground {
		color: var(--card-foreground);
	}
	.text-destructive {
		color: var(--destructive);
	}
	.text-foreground {
		color: var(--foreground);
	}
	.text-gray-600 {
		color: var(--color-gray-600);
	}
	.text-green-600 {
		color: var(--color-green-600);
	}
	.text-green-800 {
		color: var(--color-green-800);
	}
	.text-muted-foreground {
		color: var(--muted-foreground);
	}
	.text-orange-600 {
		color: var(--color-orange-600);
	}
	.text-popover-foreground {
		color: var(--popover-foreground);
	}
	.text-primary {
		color: var(--primary);
	}
	.text-primary-foreground {
		color: var(--primary-foreground);
	}
	.text-red-600 {
		color: var(--color-red-600);
	}
	.text-secondary-foreground {
		color: var(--secondary-foreground);
	}
	.text-white {
		color: var(--color-white);
	}
	.capitalize {
		text-transform: capitalize;
	}
	.lowercase {
		text-transform: lowercase;
	}
	.underline-offset-4 {
		text-underline-offset: 4px;
	}
	.opacity-0 {
		opacity: 0;
	}
	.opacity-20 {
		opacity: 0.2;
	}
	.opacity-50 {
		opacity: 0.5;
	}
	.opacity-70 {
		opacity: 0.7;
	}
	.shadow-lg {
		--tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px
			-4px var(--tw-shadow-color, #0000001a);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-md {
		--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px
			-2px var(--tw-shadow-color, #0000001a);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-sm {
		--tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px
			var(--tw-shadow-color, #0000001a);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.shadow-xs {
		--tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.ring-offset-background {
		--tw-ring-offset-color: var(--background);
	}
	.outline-hidden {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.outline-hidden {
			outline-offset: 2px;
			outline: 2px solid #0000;
		}
	}
	.outline {
		outline-style: var(--tw-outline-style);
		outline-width: 1px;
	}
	.backdrop-blur-sm {
		--tw-backdrop-blur: blur(var(--blur-sm));
		-webkit-backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);
		backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,)
	}
	.transition {
		transition-property:
			color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-\[color\,box-shadow\] {
		transition-property: color, box-shadow;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-all {
		transition-property: all;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-colors {
		transition-property: color, background-color, border-color, outline-color,
			text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
			--tw-gradient-to;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-opacity {
		transition-property: opacity;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.transition-shadow {
		transition-property: box-shadow;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.delay-500 {
		transition-delay: .5s;
	}
	.duration-200 {
		--tw-duration: .2s;
		transition-duration: .2s;
	}
	.ease-in-out {
		--tw-ease: var(--ease-in-out);
		transition-timing-function: var(--ease-in-out);
	}
	.delay-500 {
		--tw-animation-delay: .5s;
		animation-delay: .5s;
	}
	.fade-in-0 {
		--tw-enter-opacity: 0;
	}
	.outline-none {
		--tw-outline-style: none;
		outline-style: none;
	}
	.select-none {
		-webkit-user-select: none;
		user-select: none;
	}
	.zoom-in-95 {
		--tw-enter-scale: 0.95;
	}
	.running {
		animation-play-state: running;
	}
	.group-data-\[disabled\=true\]\:pointer-events-none:is(
			:where(.group)[data-disabled="true"] *
		) {
		pointer-events: none;
	}
	.group-data-\[disabled\=true\]\:opacity-50:is(
			:where(.group)[data-disabled="true"] *
		) {
		opacity: 0.5;
	}
	.group-data-\[vaul-drawer-direction\=bottom\]\/drawer-content\:block:is(
			:where(.group\/drawer-content)[data-vaul-drawer-direction="bottom"] *
		) {
		display: block;
	}
	.peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
		cursor: not-allowed;
	}
	.peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
		opacity: 0.5;
	}
	.selection\:bg-primary ::selection {
		background-color: var(--primary);
	}
	.selection\:bg-primary::selection {
		background-color: var(--primary);
	}
	.selection\:text-primary-foreground ::selection {
		color: var(--primary-foreground);
	}
	.selection\:text-primary-foreground::selection {
		color: var(--primary-foreground);
	}
	.file\:inline-flex::file-selector-button {
		display: inline-flex;
	}
	.file\:h-7::file-selector-button {
		height: calc(var(--spacing) * 7);
	}
	.file\:border-0::file-selector-button {
		border-style: var(--tw-border-style);
		border-width: 0;
	}
	.file\:bg-transparent::file-selector-button {
		background-color: #0000;
	}
	.file\:text-sm::file-selector-button {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.file\:font-medium::file-selector-button {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.file\:text-foreground::file-selector-button {
		color: var(--foreground);
	}
	.placeholder\:text-muted-foreground::placeholder {
		color: var(--muted-foreground);
	}
	@media (hover: hover) {
		.hover\:bg-accent:hover {
			background-color: var(--accent);
		}
		.hover\:bg-destructive\/80:hover {
			background-color: var(--destructive);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-destructive\/80:hover {
				background-color: color-mix(
					in oklab,
					var(--destructive) 80%,
					transparent
				);
			}
		}
		.hover\:bg-destructive\/90:hover {
			background-color: var(--destructive);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-destructive\/90:hover {
				background-color: color-mix(
					in oklab,
					var(--destructive) 90%,
					transparent
				);
			}
		}
		.hover\:bg-muted\/50:hover {
			background-color: var(--muted);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-muted\/50:hover {
				background-color: color-mix(in oklab, var(--muted) 50%, transparent);
			}
		}
		.hover\:bg-primary\/80:hover {
			background-color: var(--primary);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-primary\/80:hover {
				background-color: color-mix(in oklab, var(--primary) 80%, transparent);
			}
		}
		.hover\:bg-primary\/90:hover {
			background-color: var(--primary);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-primary\/90:hover {
				background-color: color-mix(in oklab, var(--primary) 90%, transparent);
			}
		}
		.hover\:bg-secondary\/80:hover {
			background-color: var(--secondary);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.hover\:bg-secondary\/80:hover {
				background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
			}
		}
		.hover\:text-accent-foreground:hover {
			color: var(--accent-foreground);
		}
		.hover\:text-foreground:hover {
			color: var(--foreground);
		}
		.hover\:underline:hover {
			text-decoration-line: underline;
		}
		.hover\:opacity-100:hover {
			opacity: 1;
		}
		.hover\:shadow-md:hover {
			--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px
				-2px var(--tw-shadow-color, #0000001a);
			box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
				var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
		}
	}
	.focus\:bg-accent:focus {
		background-color: var(--accent);
	}
	.focus\:text-accent-foreground:focus {
		color: var(--accent-foreground);
	}
	.focus\:ring-2:focus {
		--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus\:ring-ring:focus {
		--tw-ring-color: var(--ring);
	}
	.focus\:ring-offset-2:focus {
		--tw-ring-offset-width: 2px;
		--tw-ring-offset-shadow:var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)
	}
	.focus\:outline-none:focus {
		--tw-outline-style: none;
		outline-style: none;
	}
	.focus-visible\:border-ring:focus-visible {
		border-color: var(--ring);
	}
	.focus-visible\:ring-2:focus-visible {
		--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus-visible\:ring-\[3px\]:focus-visible {
		--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(3px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.focus-visible\:ring-destructive\/20:focus-visible {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.focus-visible\:ring-destructive\/20:focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
		}
	}
	.focus-visible\:ring-ring:focus-visible,
	.focus-visible\:ring-ring\/50:focus-visible {
		--tw-ring-color: var(--ring);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.focus-visible\:ring-ring\/50:focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
		}
	}
	.focus-visible\:ring-offset-2:focus-visible {
		--tw-ring-offset-width: 2px;
		--tw-ring-offset-shadow:var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)
	}
	.focus-visible\:outline-none:focus-visible {
		--tw-outline-style: none;
		outline-style: none;
	}
	.disabled\:pointer-events-none:disabled {
		pointer-events: none;
	}
	.disabled\:cursor-not-allowed:disabled {
		cursor: not-allowed;
	}
	.disabled\:opacity-50:disabled {
		opacity: 0.5;
	}
	.has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has(
			[data-slot="card-action"]
		) {
		grid-template-columns: 1fr auto;
	}
	.has-\[\>svg\]\:grid-cols-\[calc\(var\(--spacing\)\*4\)_1fr\]:has(> svg) {
		grid-template-columns: calc(var(--spacing) * 4) 1fr;
	}
	.has-\[\>svg\]\:gap-x-3:has(> svg) {
		column-gap: calc(var(--spacing) * 3);
	}
	.has-\[\>svg\]\:px-2\.5:has(> svg) {
		padding-inline: calc(var(--spacing) * 2.5);
	}
	.has-\[\>svg\]\:px-3:has(> svg) {
		padding-inline: calc(var(--spacing) * 3);
	}
	.has-\[\>svg\]\:px-4:has(> svg) {
		padding-inline: calc(var(--spacing) * 4);
	}
	.aria-invalid\:border-destructive[aria-invalid="true"] {
		border-color: var(--destructive);
	}
	.aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
		}
	}
	.data-\[disabled\]\:pointer-events-none[data-disabled] {
		pointer-events: none;
	}
	.data-\[disabled\]\:opacity-50[data-disabled] {
		opacity: 0.5;
	}
	.data-\[error\=true\]\:text-destructive[data-error="true"] {
		color: var(--destructive);
	}
	.data-\[inset\]\:pl-8[data-inset] {
		padding-left: calc(var(--spacing) * 8);
	}
	.data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
		--tw-translate-y: calc(var(--spacing) * 1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
		--tw-enter-translate-y: calc(2 * var(--spacing) * -1);
	}
	.data-\[side\=left\]\:-translate-x-1[data-side="left"] {
		--tw-translate-x: calc(var(--spacing) * -1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
		--tw-enter-translate-x: calc(2 * var(--spacing));
	}
	.data-\[side\=right\]\:translate-x-1[data-side="right"] {
		--tw-translate-x: calc(var(--spacing) * 1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
		--tw-enter-translate-x: calc(2 * var(--spacing) * -1);
	}
	.data-\[side\=top\]\:-translate-y-1[data-side="top"] {
		--tw-translate-y: calc(var(--spacing) * -1);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
		--tw-enter-translate-y: calc(2 * var(--spacing));
	}
	:is(
			.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *
		)[data-slot="alert-description"] {
		color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		:is(
				.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *
			)[data-slot="alert-description"] {
			color: color-mix(in oklab, var(--destructive) 90%, transparent);
		}
	}
	.data-\[state\=active\]\:bg-background[data-state="active"] {
		background-color: var(--background);
	}
	.data-\[state\=active\]\:text-foreground[data-state="active"] {
		color: var(--foreground);
	}
	.data-\[state\=active\]\:shadow-sm[data-state="active"] {
		--tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px
			var(--tw-shadow-color, #0000001a);
		box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
			var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	}
	.data-\[state\=closed\]\:animate-out[data-state="closed"] {
		animation: exit var(--tw-animation-duration, var(--tw-duration, .15s))
			var(--tw-ease, ease) var(--tw-animation-delay, 0s)
			var(--tw-animation-iteration-count, 1)
			var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
	}
	.data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
		--tw-exit-opacity: 0;
	}
	.data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
		--tw-exit-scale: 0.95;
	}
	.data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state="closed"] {
		--tw-exit-translate-x: 50%;
	}
	.data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state="closed"] {
		--tw-exit-translate-y: -48%;
	}
	.data-\[state\=open\]\:animate-in[data-state="open"] {
		animation: enter var(--tw-animation-duration, var(--tw-duration, .15s))
			var(--tw-ease, ease) var(--tw-animation-delay, 0s)
			var(--tw-animation-iteration-count, 1)
			var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
	}
	.data-\[state\=open\]\:bg-accent[data-state="open"] {
		background-color: var(--accent);
	}
	.data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
		color: var(--accent-foreground);
	}
	.data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
		color: var(--muted-foreground);
	}
	.data-\[state\=open\]\:fade-in-0[data-state="open"] {
		--tw-enter-opacity: 0;
	}
	.data-\[state\=open\]\:zoom-in-95[data-state="open"] {
		--tw-enter-scale: 0.95;
	}
	.data-\[state\=open\]\:slide-in-from-left-1\/2[data-state="open"] {
		--tw-enter-translate-x: 50%;
	}
	.data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state="open"] {
		--tw-enter-translate-y: -48%;
	}
	.data-\[state\=selected\]\:bg-muted[data-state="selected"] {
		background-color: var(--muted);
	}
	.data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
		color: var(--destructive);
	}
	.data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
		background-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
			background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
		}
	}
	.data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
		color: var(--destructive);
	}
	.data-\[vaul-drawer-direction\=bottom\]\:inset-x-0[data-vaul-drawer-direction="bottom"] {
		inset-inline: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=bottom\]\:bottom-0[data-vaul-drawer-direction="bottom"] {
		bottom: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=bottom\]\:mt-24[data-vaul-drawer-direction="bottom"] {
		margin-top: calc(var(--spacing) * 24);
	}
	.data-\[vaul-drawer-direction\=bottom\]\:max-h-\[80vh\][data-vaul-drawer-direction="bottom"] {
		max-height: 80vh;
	}
	.data-\[vaul-drawer-direction\=bottom\]\:rounded-t-lg[data-vaul-drawer-direction="bottom"] {
		border-top-left-radius: var(--radius);
		border-top-right-radius: var(--radius);
	}
	.data-\[vaul-drawer-direction\=bottom\]\:border-t[data-vaul-drawer-direction="bottom"] {
		border-top-style: var(--tw-border-style);
		border-top-width: 1px;
	}
	.data-\[vaul-drawer-direction\=left\]\:inset-y-0[data-vaul-drawer-direction="left"] {
		inset-block: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=left\]\:left-0[data-vaul-drawer-direction="left"] {
		left: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=left\]\:w-3\/4[data-vaul-drawer-direction="left"] {
		width: 75%;
	}
	.data-\[vaul-drawer-direction\=left\]\:border-r[data-vaul-drawer-direction="left"] {
		border-right-style: var(--tw-border-style);
		border-right-width: 1px;
	}
	.data-\[vaul-drawer-direction\=right\]\:inset-y-0[data-vaul-drawer-direction="right"] {
		inset-block: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=right\]\:right-0[data-vaul-drawer-direction="right"] {
		right: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=right\]\:w-3\/4[data-vaul-drawer-direction="right"] {
		width: 75%;
	}
	.data-\[vaul-drawer-direction\=right\]\:border-l[data-vaul-drawer-direction="right"] {
		border-left-style: var(--tw-border-style);
		border-left-width: 1px;
	}
	.data-\[vaul-drawer-direction\=top\]\:inset-x-0[data-vaul-drawer-direction="top"] {
		inset-inline: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=top\]\:top-0[data-vaul-drawer-direction="top"] {
		top: calc(var(--spacing) * 0);
	}
	.data-\[vaul-drawer-direction\=top\]\:mb-24[data-vaul-drawer-direction="top"] {
		margin-bottom: calc(var(--spacing) * 24);
	}
	.data-\[vaul-drawer-direction\=top\]\:max-h-\[80vh\][data-vaul-drawer-direction="top"] {
		max-height: 80vh;
	}
	.data-\[vaul-drawer-direction\=top\]\:rounded-b-lg[data-vaul-drawer-direction="top"] {
		border-bottom-right-radius: var(--radius);
		border-bottom-left-radius: var(--radius);
	}
	.data-\[vaul-drawer-direction\=top\]\:border-b[data-vaul-drawer-direction="top"] {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 1px;
	}
	@media (min-width: 40rem) {
		.sm\:mt-0 {
			margin-top: calc(var(--spacing) * 0);
		}
		.sm\:max-w-\[425px\] {
			max-width: 425px;
		}
		.sm\:flex-row {
			flex-direction: row;
		}
		.sm\:justify-end {
			justify-content: flex-end;
		}
		:where(.sm\:space-x-2 > :not(:last-child)) {
			--tw-space-x-reverse: 0;
			margin-inline-start: calc(
				calc(var(--spacing) * 2) *
				var(--tw-space-x-reverse)
			);
			margin-inline-end: calc(
				calc(var(--spacing) * 2) *
				calc(1 - var(--tw-space-x-reverse))
			);
		}
		.sm\:rounded-lg {
			border-radius: var(--radius);
		}
		.sm\:text-left {
			text-align: left;
		}
		.data-\[vaul-drawer-direction\=left\]\:sm\:max-w-sm[data-vaul-drawer-direction="left"],
		.data-\[vaul-drawer-direction\=right\]\:sm\:max-w-sm[data-vaul-drawer-direction="right"] {
			max-width: var(--container-sm);
		}
	}
	@media (min-width: 48rem) {
		.md\:col-span-1 {
			grid-column: span 1 / span 1;
		}
		.md\:col-span-2 {
			grid-column: span 2 / span 2;
		}
		.md\:w-full {
			width: 100%;
		}
		.md\:grid-cols-2 {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}
		.md\:grid-cols-3 {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
		.md\:text-sm {
			font-size: var(--text-sm);
			line-height: var(--tw-leading, var(--text-sm--line-height));
		}
	}
	@media (min-width: 64rem) {
		.lg\:grid-cols-3 {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
	}
	.dark\:scale-0:is(.dark *) {
		--tw-scale-x: 0%;
		--tw-scale-y: 0%;
		--tw-scale-z: 0%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.dark\:scale-100:is(.dark *) {
		--tw-scale-x: 100%;
		--tw-scale-y: 100%;
		--tw-scale-z: 100%;
		scale: var(--tw-scale-x) var(--tw-scale-y);
	}
	.dark\:-rotate-90:is(.dark *) {
		rotate: -90deg;
	}
	.dark\:rotate-0:is(.dark *) {
		rotate: none;
	}
	.dark\:border-amber-800:is(.dark *) {
		border-color: var(--color-amber-800);
	}
	.dark\:border-green-900:is(.dark *) {
		border-color: var(--color-green-900);
	}
	.dark\:border-green-900\/50:is(.dark *) {
		border-color: #0d542b80;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:border-green-900\/50:is(.dark *) {
			border-color: color-mix(in oklab, var(--color-green-900) 50%, transparent);
		}
	}
	.dark\:border-input:is(.dark *) {
		border-color: var(--input);
	}
	.dark\:bg-amber-950\/20:is(.dark *) {
		background-color: #46190133;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-amber-950\/20:is(.dark *) {
			background-color: color-mix(
				in oklab,
				var(--color-amber-950) 20%,
				transparent
			);
		}
	}
	.dark\:bg-black\/20:is(.dark *) {
		background-color: #0003;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-black\/20:is(.dark *) {
			background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
		}
	}
	.dark\:bg-destructive\/60:is(.dark *) {
		background-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-destructive\/60:is(.dark *) {
			background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
		}
	}
	.dark\:bg-green-900:is(.dark *) {
		background-color: var(--color-green-900);
	}
	.dark\:bg-green-900\/20:is(.dark *) {
		background-color: #0d542b33;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-green-900\/20:is(.dark *) {
			background-color: color-mix(
				in oklab,
				var(--color-green-900) 20%,
				transparent
			);
		}
	}
	.dark\:bg-input\/30:is(.dark *) {
		background-color: var(--input);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-input\/30:is(.dark *) {
			background-color: color-mix(in oklab, var(--input) 30%, transparent);
		}
	}
	.dark\:bg-orange-900\/20:is(.dark *) {
		background-color: #7e2a0c33;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:bg-orange-900\/20:is(.dark *) {
			background-color: color-mix(
				in oklab,
				var(--color-orange-900) 20%,
				transparent
			);
		}
	}
	.dark\:text-amber-300:is(.dark *) {
		color: var(--color-amber-300);
	}
	.dark\:text-amber-400:is(.dark *) {
		color: var(--color-amber-400);
	}
	.dark\:text-green-300:is(.dark *) {
		color: var(--color-green-300);
	}
	.dark\:text-green-400:is(.dark *) {
		color: var(--color-green-400);
	}
	.dark\:text-orange-400:is(.dark *) {
		color: var(--color-orange-400);
	}
	.dark\:text-red-400:is(.dark *) {
		color: var(--color-red-400);
	}
	.dark\:prose-invert:is(.dark *) {
		--tw-prose-body: var(--tw-prose-invert-body);
		--tw-prose-headings: var(--tw-prose-invert-headings);
		--tw-prose-lead: var(--tw-prose-invert-lead);
		--tw-prose-links: var(--tw-prose-invert-links);
		--tw-prose-bold: var(--tw-prose-invert-bold);
		--tw-prose-counters: var(--tw-prose-invert-counters);
		--tw-prose-bullets: var(--tw-prose-invert-bullets);
		--tw-prose-hr: var(--tw-prose-invert-hr);
		--tw-prose-quotes: var(--tw-prose-invert-quotes);
		--tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
		--tw-prose-captions: var(--tw-prose-invert-captions);
		--tw-prose-kbd: var(--tw-prose-invert-kbd);
		--tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
		--tw-prose-code: var(--tw-prose-invert-code);
		--tw-prose-pre-code: var(--tw-prose-invert-pre-code);
		--tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
		--tw-prose-th-borders: var(--tw-prose-invert-th-borders);
		--tw-prose-td-borders: var(--tw-prose-invert-td-borders);
	}
	@media (hover: hover) {
		.dark\:hover\:bg-accent\/50:is(.dark *):hover {
			background-color: var(--accent);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.dark\:hover\:bg-accent\/50:is(.dark *):hover {
				background-color: color-mix(in oklab, var(--accent) 50%, transparent);
			}
		}
		.dark\:hover\:bg-input\/50:is(.dark *):hover {
			background-color: var(--input);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.dark\:hover\:bg-input\/50:is(.dark *):hover {
				background-color: color-mix(in oklab, var(--input) 50%, transparent);
			}
		}
	}
	.dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
		}
	}
	.dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
		--tw-ring-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
			--tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
		}
	}
	.dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(
			.dark *
		)[data-variant="destructive"]:focus {
		background-color: var(--destructive);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(
				.dark *
			)[data-variant="destructive"]:focus {
			background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
		}
	}
	.\[\&_p\]\:leading-relaxed p {
		--tw-leading: var(--leading-relaxed);
		line-height: var(--leading-relaxed);
	}
	.\[\&_svg\]\:pointer-events-none svg {
		pointer-events: none;
	}
	.\[\&_svg\]\:shrink-0 svg {
		flex-shrink: 0;
	}
	.\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
		width: calc(var(--spacing) * 4);
		height: calc(var(--spacing) * 4);
	}
	.\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground
		svg:not([class*="text-"]) {
		color: var(--muted-foreground);
	}
	.\[\&_tr\]\:border-b tr {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 1px;
	}
	.\[\&_tr\:last-child\]\:border-0 tr:last-child {
		border-style: var(--tw-border-style);
		border-width: 0;
	}
	.\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role="checkbox"]) {
		padding-right: calc(var(--spacing) * 0);
	}
	.\[\.border-b\]\:pb-6.border-b {
		padding-bottom: calc(var(--spacing) * 6);
	}
	.\[\.border-t\]\:pt-6.border-t {
		padding-top: calc(var(--spacing) * 6);
	}
	:is(
			.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"]
				> *
		):is(svg) {
		color: var(--destructive) !important;
	}
	.\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] > [role="checkbox"] {
		--tw-translate-y: 2px;
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.\[\&\>button\]\:hidden > button {
		display: none;
	}
	.\[\&\>span\]\:line-clamp-1 > span {
		-webkit-line-clamp: 1;
		-webkit-box-orient: vertical;
		display: -webkit-box;
		overflow: hidden;
	}
	.\[\&\>svg\]\:size-3\.5 > svg {
		width: calc(var(--spacing) * 3.5);
		height: calc(var(--spacing) * 3.5);
	}
	.\[\&\>svg\]\:size-4 > svg {
		width: calc(var(--spacing) * 4);
		height: calc(var(--spacing) * 4);
	}
	.\[\&\>svg\]\:translate-y-0\.5 > svg {
		--tw-translate-y: calc(var(--spacing) * 0.5);
		translate: var(--tw-translate-x) var(--tw-translate-y);
	}
	.\[\&\>svg\]\:text-current > svg {
		color: currentColor;
	}
	.\[\&\>tr\]\:last\:border-b-0 > tr:last-child {
		border-bottom-style: var(--tw-border-style);
		border-bottom-width: 0;
	}
}
@property --tw-animation-delay {
	syntax: "*";
	inherits: false;
	initial-value: 0s;
}
@property --tw-animation-direction {
	syntax: "*";
	inherits: false;
	initial-value: normal;
}
@property --tw-animation-duration {
	syntax: "*";
	inherits: false;
}
@property --tw-animation-fill-mode {
	syntax: "*";
	inherits: false;
	initial-value: none;
}
@property --tw-animation-iteration-count {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-enter-opacity {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-enter-rotate {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-enter-scale {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-enter-translate-x {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-enter-translate-y {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-opacity {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-exit-rotate {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-scale {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-exit-translate-x {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-exit-translate-y {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
:root {
	--radius: .625rem;
	--background: oklch(100% 0 0);
	--foreground: oklch(14.5% 0 0);
	--card: oklch(100% 0 0);
	--card-foreground: oklch(14.5% 0 0);
	--popover: oklch(100% 0 0);
	--popover-foreground: oklch(14.5% 0 0);
	--primary: oklch(20.5% 0 0);
	--primary-foreground: oklch(98.5% 0 0);
	--secondary: oklch(97% 0 0);
	--secondary-foreground: oklch(20.5% 0 0);
	--muted: oklch(97% 0 0);
	--muted-foreground: oklch(55.6% 0 0);
	--accent: oklch(97% 0 0);
	--accent-foreground: oklch(20.5% 0 0);
	--destructive: oklch(57.7% 0.245 27.325);
	--border: oklch(92.2% 0 0);
	--input: oklch(92.2% 0 0);
	--ring: oklch(70.8% 0 0);
	--chart-1: oklch(64.6% 0.222 41.116);
	--chart-2: oklch(60% 0.118 184.704);
	--chart-3: oklch(39.8% 0.07 227.392);
	--chart-4: oklch(82.8% 0.189 84.429);
	--chart-5: oklch(76.9% 0.188 70.08);
	--sidebar: oklch(98.5% 0 0);
	--sidebar-foreground: oklch(14.5% 0 0);
	--sidebar-primary: oklch(20.5% 0 0);
	--sidebar-primary-foreground: oklch(98.5% 0 0);
	--sidebar-accent: oklch(97% 0 0);
	--sidebar-accent-foreground: oklch(20.5% 0 0);
	--sidebar-border: oklch(92.2% 0 0);
	--sidebar-ring: oklch(70.8% 0 0);
}
.dark {
	--background: oklch(14.5% 0 0);
	--foreground: oklch(98.5% 0 0);
	--card: oklch(20.5% 0 0);
	--card-foreground: oklch(98.5% 0 0);
	--popover: oklch(20.5% 0 0);
	--popover-foreground: oklch(98.5% 0 0);
	--primary: oklch(92.2% 0 0);
	--primary-foreground: oklch(20.5% 0 0);
	--secondary: oklch(26.9% 0 0);
	--secondary-foreground: oklch(98.5% 0 0);
	--muted: oklch(26.9% 0 0);
	--muted-foreground: oklch(70.8% 0 0);
	--accent: oklch(26.9% 0 0);
	--accent-foreground: oklch(98.5% 0 0);
	--destructive: oklch(70.4% 0.191 22.216);
	--border: oklch(100% 0 0 / 0.1);
	--input: oklch(100% 0 0 / 0.15);
	--ring: oklch(55.6% 0 0);
	--chart-1: oklch(48.8% 0.243 264.376);
	--chart-2: oklch(69.6% 0.17 162.48);
	--chart-3: oklch(76.9% 0.188 70.08);
	--chart-4: oklch(62.7% 0.265 303.9);
	--chart-5: oklch(64.5% 0.246 16.439);
	--sidebar: oklch(20.5% 0 0);
	--sidebar-foreground: oklch(98.5% 0 0);
	--sidebar-primary: oklch(48.8% 0.243 264.376);
	--sidebar-primary-foreground: oklch(98.5% 0 0);
	--sidebar-accent: oklch(26.9% 0 0);
	--sidebar-accent-foreground: oklch(98.5% 0 0);
	--sidebar-border: oklch(100% 0 0 / 0.1);
	--sidebar-ring: oklch(55.6% 0 0);
}
:root {
	--transition-duration: .3s;
}
* {
	transition: background-color var(--transition-duration) ease, border-color
		var(--transition-duration) ease, color var(--transition-duration) ease;
}
html.dark {
	color-scheme: dark;
}
html.dark body {
	background-color: var(--background);
	color: var(--foreground);
}
@keyframes slide-in-right {
	0% {
		transform: translate(100%);
	}
	to {
		transform: translate(0);
	}
}
@keyframes slide-out-right {
	0% {
		transform: translate(0);
	}
	to {
		transform: translate(100%);
	}
}
@keyframes slide-up {
	0% {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}
.drawer-slide-in {
	animation: .3s ease-out slide-in-right;
}
.drawer-slide-out {
	animation: .3s ease-in slide-out-right;
}
.field-slide-up {
	animation: .4s ease-out slide-up;
}
.delay-0 {
	animation-delay: 0s;
}
.delay-100 {
	animation-delay: .1s;
}
.delay-200 {
	animation-delay: .2s;
}
.delay-300 {
	animation-delay: .3s;
}
.delay-400 {
	animation-delay: .4s;
}
.delay-500 {
	animation-delay: .5s;
}
@property --tw-translate-x {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-translate-y {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-translate-z {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-scale-x {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-scale-y {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-scale-z {
	syntax: "*";
	inherits: false;
	initial-value: 1;
}
@property --tw-rotate-x {
	syntax: "*";
	inherits: false;
}
@property --tw-rotate-y {
	syntax: "*";
	inherits: false;
}
@property --tw-rotate-z {
	syntax: "*";
	inherits: false;
}
@property --tw-skew-x {
	syntax: "*";
	inherits: false;
}
@property --tw-skew-y {
	syntax: "*";
	inherits: false;
}
@property --tw-space-y-reverse {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@property --tw-border-style {
	syntax: "*";
	inherits: false;
	initial-value: solid;
}
@property --tw-gradient-position {
	syntax: "*";
	inherits: false;
}
@property --tw-gradient-from {
	syntax: "<color>";
	inherits: false;
	initial-value: #0000;
}
@property --tw-gradient-via {
	syntax: "<color>";
	inherits: false;
	initial-value: #0000;
}
@property --tw-gradient-to {
	syntax: "<color>";
	inherits: false;
	initial-value: #0000;
}
@property --tw-gradient-stops {
	syntax: "*";
	inherits: false;
}
@property --tw-gradient-via-stops {
	syntax: "*";
	inherits: false;
}
@property --tw-gradient-from-position {
	syntax: "<length-percentage>";
	inherits: false;
	initial-value: 0%;
}
@property --tw-gradient-via-position {
	syntax: "<length-percentage>";
	inherits: false;
	initial-value: 50%;
}
@property --tw-gradient-to-position {
	syntax: "<length-percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-leading {
	syntax: "*";
	inherits: false;
}
@property --tw-font-weight {
	syntax: "*";
	inherits: false;
}
@property --tw-tracking {
	syntax: "*";
	inherits: false;
}
@property --tw-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
	syntax: "*";
	inherits: false;
}
@property --tw-shadow-alpha {
	syntax: "<percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-inset-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
	syntax: "*";
	inherits: false;
}
@property --tw-inset-shadow-alpha {
	syntax: "<percentage>";
	inherits: false;
	initial-value: 100%;
}
@property --tw-ring-color {
	syntax: "*";
	inherits: false;
}
@property --tw-ring-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
	syntax: "*";
	inherits: false;
}
@property --tw-inset-ring-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
	syntax: "*";
	inherits: false;
}
@property --tw-ring-offset-width {
	syntax: "<length>";
	inherits: false;
	initial-value: 0;
}
@property --tw-ring-offset-color {
	syntax: "*";
	inherits: false;
	initial-value: #fff;
}
@property --tw-ring-offset-shadow {
	syntax: "*";
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-outline-style {
	syntax: "*";
	inherits: false;
	initial-value: solid;
}
@property --tw-backdrop-blur {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-brightness {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-contrast {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-grayscale {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-hue-rotate {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-invert {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-opacity {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-saturate {
	syntax: "*";
	inherits: false;
}
@property --tw-backdrop-sepia {
	syntax: "*";
	inherits: false;
}
@property --tw-duration {
	syntax: "*";
	inherits: false;
}
@property --tw-ease {
	syntax: "*";
	inherits: false;
}
@property --tw-space-x-reverse {
	syntax: "*";
	inherits: false;
	initial-value: 0;
}
@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}
@keyframes enter {
	0% {
		opacity: var(--tw-enter-opacity, 1);
		transform: translate3d(
				var(--tw-enter-translate-x, 0),
				var(--tw-enter-translate-y, 0),
				0
			)
			scale3d(
				var(--tw-enter-scale, 1),
				var(--tw-enter-scale, 1),
				var(--tw-enter-scale, 1)
			)
			rotate(var(--tw-enter-rotate, 0));
	}
}
@keyframes exit {
	to {
		opacity: var(--tw-exit-opacity, 1);
		transform: translate3d(
				var(--tw-exit-translate-x, 0),
				var(--tw-exit-translate-y, 0),
				0
			)
			scale3d(
				var(--tw-exit-scale, 1),
				var(--tw-exit-scale, 1),
				var(--tw-exit-scale, 1)
			)
			rotate(var(--tw-exit-rotate, 0));
	}
}
