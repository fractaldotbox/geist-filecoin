---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";

export async function getStaticPaths() {
	const products = await getCollection("products");
	return products.map((product) => ({
		params: { slug: product.id },
		props: product,
	}));
}

type Props = CollectionEntry<"products">;

const product = Astro.props;
const { data } = product;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={data.title} description={data.metaDescription} />
	</head>
	<body>
		<Header />
		<main>
			<!-- Product Hero -->
			<section class="product-hero">
				<div class="container">
					<div class="hero-grid">
						<div class="hero-image">
							<img src={data.images[0]} alt={data.title} />
						</div>
						<div class="hero-content">
							<h1>{data.title}</h1>
							<p class="product-description">{data.description}</p>
							<div class="price-section">
								<span class="price">${data.price}</span>
								<span class="currency">{data.currency}</span>
							</div>
							<button class="purchase-btn">Get Started</button>
						</div>
					</div>
				</div>
			</section>

			<!-- Product Features -->
			<section class="features-section">
				<div class="container">
					<h2>Features</h2>
					<div class="features-grid">
						{data.features.map((feature) => (
							<div class="feature-item">
								<span class="feature-icon">âœ“</span>
								<span class="feature-text">{feature}</span>
							</div>
						))}
					</div>
				</div>
			</section>

			<!-- Specifications -->
			<section class="specifications-section">
				<div class="container">
					<h2>Technical Specifications</h2>
					<div class="specs-grid">
						<div class="spec-item">
							<h3>Storage Capacity</h3>
							<p>{data.specifications.storage_capacity}</p>
						</div>
						<div class="spec-item">
							<h3>Bandwidth</h3>
							<p>{data.specifications.bandwidth}</p>
						</div>
						<div class="spec-item">
							<h3>API Rate Limit</h3>
							<p>{data.specifications.api_rate_limit}</p>
						</div>
						<div class="spec-item">
							<h3>Encryption</h3>
							<p>{data.specifications.encryption}</p>
						</div>
						<div class="spec-item">
							<h3>Redundancy</h3>
							<p>{data.specifications.redundancy}</p>
						</div>
						<div class="spec-item">
							<h3>Supported Formats</h3>
							<p>{data.specifications.supported_formats}</p>
						</div>
						<div class="spec-item">
							<h3>Integration</h3>
							<p>{data.specifications.integration}</p>
						</div>
						<div class="spec-item">
							<h3>Compliance</h3>
							<p>{data.specifications.compliance}</p>
						</div>
						<div class="spec-item">
							<h3>Backup Retention</h3>
							<p>{data.specifications.backup_retention}</p>
						</div>
						<div class="spec-item">
							<h3>Geographic Distribution</h3>
							<p>{data.specifications.geographic_distribution}</p>
						</div>
					</div>
				</div>
			</section>

			<!-- Product Gallery -->
			{data.images.length > 1 && (
				<section class="gallery-section">
					<div class="container">
						<h2>Product Gallery</h2>
						<div class="gallery-grid">
							{data.images.slice(1).map((image) => (
								<div class="gallery-item">
									<img src={image} alt={data.title} />
								</div>
							))}
						</div>
					</div>
				</section>
			)}
		</main>
		<Footer />
	</body>
</html>

<style>
	.product-hero {
		padding: 4rem 0;
		background: #f8f9fa;
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.hero-grid {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 4rem;
		align-items: center;
	}

	.hero-image img {
		width: 100%;
		height: 400px;
		object-fit: cover;
		border-radius: 15px;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
	}

	.hero-content h1 {
		font-size: 2.5rem;
		margin-bottom: 1.5rem;
		color: #333;
	}

	.product-description {
		font-size: 1.1rem;
		line-height: 1.6;
		color: #666;
		margin-bottom: 2rem;
	}

	.price-section {
		margin-bottom: 2rem;
	}

	.price {
		font-size: 3rem;
		font-weight: bold;
		color: #007acc;
	}

	.currency {
		font-size: 1.2rem;
		color: #666;
		margin-left: 0.5rem;
	}

	.purchase-btn {
		background: #007acc;
		color: white;
		padding: 1rem 2rem;
		border: none;
		border-radius: 8px;
		font-size: 1.1rem;
		font-weight: bold;
		cursor: pointer;
		transition: background 0.3s ease;
	}

	.purchase-btn:hover {
		background: #005a99;
	}

	.features-section,
	.specifications-section,
	.gallery-section {
		padding: 4rem 0;
	}

	.features-section {
		background: white;
	}

	.specifications-section {
		background: #f8f9fa;
	}

	.gallery-section {
		background: white;
	}

	.features-section h2,
	.specifications-section h2,
	.gallery-section h2 {
		text-align: center;
		font-size: 2.5rem;
		margin-bottom: 3rem;
		color: #333;
	}

	.features-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 1.5rem;
	}

	.feature-item {
		display: flex;
		align-items: center;
		padding: 1rem;
		background: white;
		border-radius: 10px;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
	}

	.feature-icon {
		color: #007acc;
		font-weight: bold;
		font-size: 1.2rem;
		margin-right: 1rem;
		flex-shrink: 0;
	}

	.feature-text {
		color: #333;
		line-height: 1.5;
	}

	.specs-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 2rem;
	}

	.spec-item {
		background: white;
		padding: 2rem;
		border-radius: 10px;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
	}

	.spec-item h3 {
		color: #007acc;
		margin-bottom: 1rem;
		font-size: 1.2rem;
	}

	.spec-item p {
		color: #666;
		line-height: 1.5;
		margin: 0;
	}

	.gallery-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
	}

	.gallery-item img {
		width: 100%;
		height: 250px;
		object-fit: cover;
		border-radius: 10px;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		transition: transform 0.3s ease;
	}

	.gallery-item img:hover {
		transform: scale(1.05);
	}

	@media (max-width: 768px) {
		.hero-grid {
			grid-template-columns: 1fr;
			gap: 2rem;
		}

		.hero-content h1 {
			font-size: 2rem;
		}

		.price {
			font-size: 2rem;
		}

		.features-grid,
		.specs-grid,
		.gallery-grid {
			grid-template-columns: 1fr;
		}
	}
</style>
